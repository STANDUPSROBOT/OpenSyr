{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/guilhem/Bureau/API-Projet-TER/react-flask-app/src/components/Running.js\";\nimport '../App.css';\nimport React from 'react';\nimport ProgressBar from 'react-bootstrap/ProgressBar';\n\nclass Running extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      uploadProgress: 20\n    };\n  }\n\n  function() {\n    while (this.state.uploadProgress <= 100) {\n      this.state.uploadProgress = this.state.uploadProgress + 1;\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App-main\",\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"The experience is running\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 51\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 60\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 69\n      }, this), /*#__PURE__*/_jsxDEV(\"script\", {\n        children: \"function();\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n        onChange: this.function,\n        variant: \"warning\",\n        animated: true,\n        now: this.state.uploadProgress,\n        label: `${this.state.uploadProgress}% completed`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 14\n    }, this);\n  }\n\n}\n\nexport default Running;","map":{"version":3,"sources":["/home/guilhem/Bureau/API-Projet-TER/react-flask-app/src/components/Running.js"],"names":["React","ProgressBar","Running","Component","constructor","props","state","uploadProgress","function","render"],"mappings":";;AAAA,OAAO,YAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;;AAEA,MAAMC,OAAN,SAAsBF,KAAK,CAACG,SAA5B,CAAqC;AACnCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW;AAACC,MAAAA,cAAc,EAAG;AAAlB,KAAX;AACD;;AACDC,EAAAA,QAAQ,GAAE;AACR,WAAM,KAAKF,KAAL,CAAWC,cAAX,IAA6B,GAAnC,EAAuC;AACrC,WAAKD,KAAL,CAAWC,cAAX,GAA2B,KAAKD,KAAL,CAAWC,cAAX,GAA0B,CAArD;AACD;AACF;;AAECE,EAAAA,MAAM,GAAE;AACN,wBAAO;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BAEG;AAAA;AAAA;AAAA;AAAA,cAFH,eAGG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHH,eAGqC;AAAA;AAAA;AAAA;AAAA,cAHrC,eAG8C;AAAA;AAAA;AAAA;AAAA,cAH9C,eAGuD;AAAA;AAAA;AAAA;AAAA,cAHvD,eAIG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJH,eAOG,QAAC,WAAD;AAAa,QAAA,QAAQ,EAAE,KAAKD,QAA5B;AAAsC,QAAA,OAAO,EAAC,SAA9C;AAAwD,QAAA,QAAQ,MAAhE;AAAiE,QAAA,GAAG,EAAE,KAAKF,KAAL,CAAWC,cAAjF;AAAiG,QAAA,KAAK,EAAG,GAAE,KAAKD,KAAL,CAAWC,cAAe;AAArI;AAAA;AAAA;AAAA;AAAA,cAPH;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AASC;;AArB8B;;AAyBrC,eAAeL,OAAf","sourcesContent":["import '../App.css';\nimport React from 'react';\nimport ProgressBar from 'react-bootstrap/ProgressBar'\n\nclass Running extends React.Component{\n  constructor(props) {\n    super(props);          \n    this.state={uploadProgress : 20}\n  }\n  function(){\n    while(this.state.uploadProgress <= 100){\n      this.state.uploadProgress= this.state.uploadProgress+1;\n    }\n  }\n  \n    render(){\n      return <div className=\"App-main\" >\n        \n                <br></br>                 \n                <h1>The experience is running</h1><br></br><br></br><br></br>\n                <script>\n                  function();\n                </script>\n                <ProgressBar onChange={this.function} variant=\"warning\" animated now={this.state.uploadProgress} label={`${this.state.uploadProgress}% completed`} />\n            </div>\n      }\n\n   \n}   \nexport default Running;\n"]},"metadata":{},"sourceType":"module"}