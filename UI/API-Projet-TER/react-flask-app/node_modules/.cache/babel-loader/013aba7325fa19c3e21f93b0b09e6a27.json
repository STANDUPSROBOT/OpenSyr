{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/guilhem/Bureau/API-Projet-TER/react-flask-app/src/components/Running.js\";\nimport '../App.css';\nimport React from 'react';\nimport ProgressBar from 'react-bootstrap/ProgressBar';\n\nclass Running extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      uploadProgress: 1\n    };\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(() => this.setState({\n      uploadProgress: this.state.uploadProgress + 1\n    }), 1000);\n\n    if (this.state.uploadProgress = 10) {\n      clearInterval(this.interval);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App-main\",\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"The experience is running\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 51\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 60\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 69\n      }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n        variant: \"warning\",\n        animated: true,\n        now: this.state.uploadProgress,\n        label: `${this.state.uploadProgress}% completed`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 14\n    }, this);\n  }\n\n}\n\nexport default Running;","map":{"version":3,"sources":["/home/guilhem/Bureau/API-Projet-TER/react-flask-app/src/components/Running.js"],"names":["React","ProgressBar","Running","Component","constructor","props","state","uploadProgress","componentDidMount","interval","setInterval","setState","clearInterval","render"],"mappings":";;AAAA,OAAO,YAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;;AAEA,MAAMC,OAAN,SAAsBF,KAAK,CAACG,SAA5B,CAAqC;AACnCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW;AAACC,MAAAA,cAAc,EAAG;AAAlB,KAAX;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,QAAL,GAAgBC,WAAW,CAAC,MAAM,KAAKC,QAAL,CAAc;AAAEJ,MAAAA,cAAc,EAAE,KAAKD,KAAL,CAAWC,cAAX,GAA0B;AAA5C,KAAd,CAAP,EAAuE,IAAvE,CAA3B;;AACA,QAAG,KAAKD,KAAL,CAAWC,cAAX,GAA4B,EAA/B,EAAkC;AAChCK,MAAAA,aAAa,CAAC,KAAKH,QAAN,CAAb;AACD;AACJ;;AACCI,EAAAA,MAAM,GAAE;AACN,wBAAO;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BAEG;AAAA;AAAA;AAAA;AAAA,cAFH,eAGG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHH,eAGqC;AAAA;AAAA;AAAA;AAAA,cAHrC,eAG8C;AAAA;AAAA;AAAA;AAAA,cAH9C,eAGuD;AAAA;AAAA;AAAA;AAAA,cAHvD,eAKG,QAAC,WAAD;AAAa,QAAA,OAAO,EAAC,SAArB;AAA+B,QAAA,QAAQ,MAAvC;AAAwC,QAAA,GAAG,EAAE,KAAKP,KAAL,CAAWC,cAAxD;AAAwE,QAAA,KAAK,EAAG,GAAE,KAAKD,KAAL,CAAWC,cAAe;AAA5G;AAAA;AAAA;AAAA;AAAA,cALH;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAOC;;AApB8B;;AAwBrC,eAAeL,OAAf","sourcesContent":["import '../App.css';\nimport React from 'react';\nimport ProgressBar from 'react-bootstrap/ProgressBar'\n\nclass Running extends React.Component{\n  constructor(props) {\n    super(props);          \n    this.state={uploadProgress : 1}\n  }\n\n  componentDidMount() {\n      this.interval = setInterval(() => this.setState({ uploadProgress: this.state.uploadProgress+1 }), 1000); \n      if(this.state.uploadProgress = 10){\n        clearInterval(this.interval);\n      }     \n  }\n    render(){\n      return <div className=\"App-main\" >\n        \n                <br></br>                 \n                <h1>The experience is running</h1><br></br><br></br><br></br>\n                \n                <ProgressBar variant=\"warning\" animated now={this.state.uploadProgress} label={`${this.state.uploadProgress}% completed`} />\n            </div>\n      }\n\n   \n}   \nexport default Running;\n"]},"metadata":{},"sourceType":"module"}