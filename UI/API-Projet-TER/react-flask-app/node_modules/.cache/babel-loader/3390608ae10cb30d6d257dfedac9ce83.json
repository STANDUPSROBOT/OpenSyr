{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/guilhem/Bureau/API-Projet-TER/react-flask-app/src/components/OpenSYR.js\";\nimport '../App.css';\nimport React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport axios from 'axios';\n\nclass OpenSYR extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentTime: 0\n    };\n  }\n\n  componentDidMount() {\n    fetch('/time').then(res => res.json()).then(data => {\n      this.setState({\n        currentTime: data.time\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"body\", {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        action: \"/api/init_python\",\n        method: \"post\",\n        onSubmit: this.init_python,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Row, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              column: \"lg\",\n              lg: 2,\n              children: \"Syringe diameter\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Syringe diameter (cm)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              column: \"lg\",\n              lg: 2,\n              children: \"Length of the experience\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Length of the experience (s)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              column: \"sm\",\n              lg: 2,\n              children: \"Volume to inject\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Volume to inject (mL)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          children: \"Valider les donn\\xE9es\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 15\n    }, this);\n  }\n\n  init_python(e) {\n    e.preventDefault();\n    const formData = new FormData(); //Using this config in my request, the response gives me the mentioned waring of missing boundary\n\n    const config = {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    };\n    formData.append(\"time\", 0.2);\n    axios.post(\"/api/init_python\", formData, config);\n  }\n\n}\n\nexport default OpenSYR;","map":{"version":3,"sources":["/home/guilhem/Bureau/API-Projet-TER/react-flask-app/src/components/OpenSYR.js"],"names":["React","Button","Form","axios","OpenSYR","Component","constructor","props","state","currentTime","componentDidMount","fetch","then","res","json","data","setState","time","render","init_python","e","preventDefault","formData","FormData","config","headers","append","post"],"mappings":"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","sourcesContent":["import '../App.css';\nimport React from 'react';\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\nimport axios from 'axios';\n\nclass OpenSYR extends React.Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentTime: 0\n    };\n  }\n\n  componentDidMount() {\n    fetch('/time').then(res => res.json()).then(data => {\n      this.setState({currentTime: data.time});\n    });\n  }\n\n    render(){\n      return  <body>\n                <Form action=\"/api/init_python\" method=\"post\" onSubmit={this.init_python}>\n                  <Form.Group>\n                        <Form.Row>\n                          <Form.Label column=\"lg\" lg={2}>\n                            Syringe diameter\n                          </Form.Label>\n                              <Form.Control type=\"text\" placeholder=\"Syringe diameter (cm)\" />\n                        </Form.Row>\n                        <br />\n                        <Form.Row>\n                          <Form.Label column=\"lg\" lg={2}>\n                            Length of the experience\n                          </Form.Label>\n                            <Form.Control type=\"text\" placeholder=\"Length of the experience (s)\" />\n                        </Form.Row>\n                        <br />\n                        <Form.Row>\n                          <Form.Label column=\"sm\" lg={2}>\n                            Volume to inject\n                          </Form.Label>\n                            <Form.Control type=\"text\" placeholder=\"Volume to inject (mL)\" />\n                        </Form.Row>\n                    </Form.Group>\n                  <Button variant=\"primary\" type=\"submit\">Valider les donn√©es</Button>\n                </Form>\n              </body>\n    }\n\n\n\n\n\n\n    init_python(e) {\n        e.preventDefault();\n        const formData = new FormData();\n\n        //Using this config in my request, the response gives me the mentioned waring of missing boundary\n        const config = {\n            headers:{\n                'Content-Type' : 'multipart/form-data',\n            }\n        };\n\n        formData.append(\"time\", 0.2);\n\n        axios.post(\"/api/init_python\", formData, config)\n    \n    }\n\n\n\n\n\n\n\n\n\n\n  }\n\n  export default OpenSYR\n;\n"]},"metadata":{},"sourceType":"module"}