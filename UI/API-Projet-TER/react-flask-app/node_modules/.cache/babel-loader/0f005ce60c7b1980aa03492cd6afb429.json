{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/guilhem/Bureau/API-Projet-TER/react-flask-app/src/components/Running.js\";\nimport '../App.css';\nimport React from 'react';\nimport ProgressBar from 'react-bootstrap/ProgressBar';\n\nclass Running extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      uploadProgress: 0\n    };\n  }\n\n  App() {\n    const [completed, setCompleted] = useState(0);\n    useEffect(() => {\n      setInterval(() => setCompleted(Math.floor(Math.random() * 100) + 1), 2000);\n    }, []);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App-main\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"The experience is running\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n        variant: \"warning\",\n        animated: true,\n        completed: completed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 14\n    }, this);\n  }\n\n}\n\nexport default Running;","map":{"version":3,"sources":["/home/guilhem/Bureau/API-Projet-TER/react-flask-app/src/components/Running.js"],"names":["React","ProgressBar","Running","Component","constructor","props","state","uploadProgress","App","completed","setCompleted","useState","useEffect","setInterval","Math","floor","random","render"],"mappings":";;AAAA,OAAO,YAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;;AAEA,MAAMC,OAAN,SAAsBF,KAAK,CAACG,SAA5B,CAAqC;AACnCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW;AAACC,MAAAA,cAAc,EAAG;AAAlB,KAAX;AACD;;AAECC,EAAAA,GAAG,GAAG;AACF,UAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BC,QAAQ,CAAC,CAAD,CAA1C;AAEAC,IAAAA,SAAS,CAAC,MAAM;AAChBC,MAAAA,WAAW,CAAC,MAAMH,YAAY,CAACI,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,IAAkC,CAAnC,CAAnB,EAA0D,IAA1D,CAAX;AACC,KAFQ,EAEN,EAFM,CAAT;AAGH;;AAEDC,EAAAA,MAAM,GAAE;AACN,wBAAO;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BAEG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFH,eAGG,QAAC,WAAD;AAAa,QAAA,OAAO,EAAC,SAArB;AAA+B,QAAA,QAAQ,MAAvC;AAAwC,QAAA,SAAS,EAAER;AAAnD;AAAA;AAAA;AAAA;AAAA,cAHH;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAKC;;AApB8B;;AAwBrC,eAAeP,OAAf","sourcesContent":["import '../App.css';\nimport React from 'react';\nimport ProgressBar from 'react-bootstrap/ProgressBar'\n\nclass Running extends React.Component{\n  constructor(props) {\n    super(props); \n    this.state={uploadProgress : 0};   \n  }  \n\n    App() {\n        const [completed, setCompleted] = useState(0);\n    \n        useEffect(() => {\n        setInterval(() => setCompleted(Math.floor(Math.random() * 100) + 1), 2000);\n        }, []);\n    }       \n  \n    render(){\n      return <div className=\"App-main\" >\n                \n                <h1>The experience is running</h1>\n                <ProgressBar variant=\"warning\" animated completed={completed} />\n            </div>\n      }\n\n   \n}   \nexport default Running;\n"]},"metadata":{},"sourceType":"module"}