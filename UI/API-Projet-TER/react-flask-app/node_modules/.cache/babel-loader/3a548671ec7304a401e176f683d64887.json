{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/guilhem/Bureau/API-Projet-TER/react-flask-app/src/components/Running.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport ProgressBar from \"./progress-bar.component\";\n\nfunction Running() {\n  _s();\n\n  const [completed, setCompleted] = useState(0);\n  useEffect(() => {\n    setInterval(() => setCompleted(Math.floor(Math.random() * 100) + 1), 2000);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(ProgressBar, {\n      bgcolor: \"#6a1b9a\",\n      completed: completed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Running, \"7sRoG+O9sj23XcMU/nqd6D+f4ss=\");\n\n_c = Running;\nexport default Running;\n\nvar _c;\n\n$RefreshReg$(_c, \"Running\");","map":{"version":3,"sources":["/home/guilhem/Bureau/API-Projet-TER/react-flask-app/src/components/Running.js"],"names":["React","useState","useEffect","ProgressBar","Running","completed","setCompleted","setInterval","Math","floor","random"],"mappings":";;;;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,OAAOC,WAAP,MAAwB,0BAAxB;;AAEA,SAASC,OAAT,GAAmB;AAAA;;AACjB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,CAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,WAAW,CAAC,MAAMD,YAAY,CAACE,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,IAAkC,CAAnC,CAAnB,EAA0D,IAA1D,CAAX;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE,QAAC,WAAD;AAAa,MAAA,OAAO,EAAE,SAAtB;AAAiC,MAAA,SAAS,EAAEL;AAA5C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAZQD,O;;KAAAA,O;AAcT,eAAeA,OAAf","sourcesContent":["\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport ProgressBar from \"./progress-bar.component\";\n\nfunction Running() {\n  const [completed, setCompleted] = useState(0);\n\n  useEffect(() => {\n    setInterval(() => setCompleted(Math.floor(Math.random() * 100) + 1), 2000);\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <ProgressBar bgcolor={\"#6a1b9a\"} completed={completed} />\n    </div>\n  );\n}\n\nexport default Running;"]},"metadata":{},"sourceType":"module"}