{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/guilhem/Bureau/API-Projet-TER/react-flask-app/src/components/OpenSYR.js\";\nimport '../App.css';\nimport React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport axios from 'axios';\nimport { Container } from 'reactstrap';\n\nclass OpenSYR extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = {\n      diameter: \"\",\n      length: \"\",\n      volume: \"\"\n    };\n    this.HandleSubmit = this.HandleSubmit.bind(this);\n  }\n\n  HandleSubmit(e) {\n    e.preventDefault(); //console.log(\"SUBMIT\")\n\n    const formData = new FormData(); //Using this config in my request, the response gives me the mentioned waring of missing boundary\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    formData.append(\"file\", this.state.to_upload);\n    axios.post(\"/api/launch_experience\", this.state, config).then(response => {\n      console.log(response);\n    });\n    window.location.href = \"/Running\";\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App-main\",\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Insert the data of the experience\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        action: \"./api/init_python\",\n        method: \"post\",\n        onSubmit: this.HandleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Row, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              column: \"lg\",\n              lg: 0,\n              children: \"Syringe diameter\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"diameter\",\n              placeholder: \"Syringe diameter (cm)\",\n              value: this.state.diameter,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              column: \"lg\",\n              lg: 0,\n              children: \"Length of the experience\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"length\",\n              placeholder: \"Length of the experience (s)\",\n              value: this.state.length,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              column: \"lg\",\n              lg: 0,\n              children: \"Volume to inject\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"volume\",\n              placeholder: \"Volume to inject (mL)\",\n              value: this.state.volume,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          disabled: !this.state.diameter || !this.state.length || !this.state.volume,\n          children: \"Launch experience\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 14\n    }, this);\n  }\n\n}\n\nexport default OpenSYR;","map":{"version":3,"sources":["/home/guilhem/Bureau/API-Projet-TER/react-flask-app/src/components/OpenSYR.js"],"names":["React","Button","Form","axios","Container","OpenSYR","Component","constructor","props","handleChange","event","setState","target","name","value","state","diameter","length","volume","HandleSubmit","bind","e","preventDefault","formData","FormData","config","headers","append","to_upload","post","then","response","console","log","window","location","href","render"],"mappings":"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","sourcesContent":["import '../App.css';\nimport React from 'react';\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\nimport axios from 'axios';\nimport {Container} from 'reactstrap'\n\nclass OpenSYR extends React.Component{\n  constructor(props) {\n    super(props);\n    this.state = { diameter: \"\",length : \"\", volume : \"\",};\n    this.HandleSubmit = this.HandleSubmit.bind(this);     \n  }\n\n  handleChange = (event) => {\n    this.setState({[event.target.name]: event.target.value});\n  }\n\n  HandleSubmit(e){\n    e.preventDefault();\n    //console.log(\"SUBMIT\")\n    const formData = new FormData();\n\n    //Using this config in my request, the response gives me the mentioned waring of missing boundary\n    const config = {\n        headers:{\n            'Content-Type' : 'application/json',\n        }\n    };\n\n    formData.append(\"file\", this.state.to_upload);\n\n    axios.post(\"/api/launch_experience\", this.state, config)\n    .then(response => {\n        console.log(response)\n    })\n    window.location.href=\"/Running\"\n\n  }\n  \n    render(){\n      return <div className=\"App-form\" >\n              <div className=\"App-main\" >\n              <Container>              \n                <p>\n                  Insert the data of the experience \n                </p>                  \n              </Container>\n              </div>\n                <Form action=\"./api/init_python\" method=\"post\" onSubmit={this.HandleSubmit} >\n                  <Form.Group>\n                        <Form.Row>\n                          <Form.Label column=\"lg\" lg={0}>\n                            Syringe diameter\n                          </Form.Label>\n                              <Form.Control type=\"text\" name=\"diameter\" placeholder=\"Syringe diameter (cm)\" value={this.state.diameter}\n                              onChange={this.handleChange} />\n                        </Form.Row>\n                        <br />\n                        <Form.Row>\n                          <Form.Label column=\"lg\" lg={0}>\n                            Length of the experience\n                          </Form.Label>\n                            <Form.Control type=\"text\" name=\"length\" placeholder=\"Length of the experience (s)\" value={this.state.length}\n                            onChange={this.handleChange}/>\n                        </Form.Row>\n                        <br />\n                        <Form.Row>\n                          <Form.Label column=\"lg\" lg={0}>\n                            Volume to inject\n                          </Form.Label>\n                            <Form.Control type=\"text\" name=\"volume\" placeholder=\"Volume to inject (mL)\" value={this.state.volume}\n                            onChange={this.handleChange}/>\n                        </Form.Row>\n                    </Form.Group>\n                  <Button variant=\"primary\" type=\"submit\" disabled={!this.state.diameter || !this.state.length || !this.state.volume}>Launch experience</Button>                  \n                </Form>\n              </div>\n      }\n\n   \n}   \nexport default OpenSYR;\n"]},"metadata":{},"sourceType":"module"}